---

- name: version
  hosts: bigip
  connection: local
  gather_facts: false

  tasks:
    - name: setup provider
      set_fact:
        provider:
          server: "{{ ansible_host }}"
          user: "{{ bigip_username }}"
          password: "{{ bigip_password }}"
          validate_certs: false
          server_port: 443

    - name: Wait for BIG-IP to be available
      bigip_wait:
        timeout: 300
        provider: "{{ provider }}"
      delegate_to: localhost
      register: status
      until: status is success
      retries: 10
      delay: 6

    - name: Collect BIG-IP information
      bigip_device_info:
        gather_subset: devices
        provider:
          user: "{{ bigip_user }}"
          password: "{{ bigip_password }}"
          server: "{{ inventory_hostname }}"
          validate_certs: no
      register: devices
      delegate_to: localhost

    - name: Update data group
      bigip_data_group:
        name: "{{ data_group_name }}"
        internal: yes
        records:
          - key: "{{ key_name }}"
            value: "{{ key_value }}"
        provider: "{{ provider }}"
      delegate_to: localhost
      when: inventory_hostname == (devices.devices | selectattr('failover_state', 'search', 'active') | list | first).name

    - name: Sync configuration from device to group
      bigip_configsync_action:
        device_group: "{{ sync_device_group }}"
        sync_device_to_group: yes
        provider: "{{ provider }}"
      delegate_to: localhost
      when: sync_config == "1" and inventory_hostname == (devices.devices | selectattr('failover_state', 'search', 'active') | list | first).name

